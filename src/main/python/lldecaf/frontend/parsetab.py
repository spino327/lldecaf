
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '79F8086FAC3FBDD8D5C82F35CCA6D5E8'
    
_lr_action_items = {'LBRACE':([26,28,],[30,30,]),'RPAREN':([18,19,20,22,23,24,25,31,44,],[-25,-25,-16,-17,26,28,-7,-15,45,]),'STRING':([0,1,2,7,13,14,16,18,19,27,29,30,32,33,34,35,43,],[3,-3,3,-4,-5,-2,-6,3,3,3,-14,-25,-13,-20,3,-19,-18,]),'SEMI':([11,17,25,45,],[16,-7,-7,46,]),'INT':([0,1,2,7,13,14,16,18,19,27,29,30,32,33,34,35,43,],[4,-3,4,-4,-5,-2,-6,4,4,4,-14,-25,-13,-20,4,-19,-18,]),'DOUBLE':([0,1,2,7,13,14,16,18,19,27,29,30,32,33,34,35,43,],[5,-3,5,-4,-5,-2,-6,5,5,5,-14,-25,-13,-20,5,-19,-18,]),'VOID':([0,1,2,7,13,14,16,29,32,43,],[6,-3,6,-4,-5,-2,-6,-14,-13,-18,]),'RBRACE':([16,30,33,34,35,36,38,39,40,41,46,],[-6,-25,-20,-25,-19,-25,-23,43,-22,-21,-24,]),'BOOL':([0,1,2,7,13,14,16,18,19,27,29,30,32,33,34,35,43,],[10,-3,10,-4,-5,-2,-6,10,10,10,-14,-25,-13,-20,10,-19,-18,]),'SCONST':([42,],[44,]),'LPAREN':([15,17,37,],[18,19,42,]),'PRINT':([16,30,33,34,35,36,38,46,],[-6,-25,-20,37,-19,37,-23,-24,]),'COMMA':([18,19,20,22,23,24,25,31,],[-25,-25,-16,-17,27,27,-7,-15,]),'ID':([0,1,2,3,4,5,6,7,8,10,12,13,14,16,18,19,21,27,29,30,32,33,34,35,43,],[8,-3,8,-11,-8,-9,15,-4,-12,-10,17,-5,-2,-6,8,8,25,8,-14,-25,-13,-20,8,-19,-18,]),'$end':([1,2,7,9,13,14,16,29,32,43,],[-3,-1,-4,0,-5,-2,-6,-14,-13,-18,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Decl':([0,2,],[1,14,]),'StmtBlock':([26,28,],[29,32,]),'DeclList':([0,],[2,]),'VarDec':([0,2,34,],[7,7,35,]),'Stmt':([34,36,],[36,36,]),'PrintStmt':([34,36,],[38,38,]),'Program':([0,],[9,]),'StmtList':([34,36,],[39,41,]),'Var':([0,2,18,19,27,34,],[11,11,20,20,31,11,]),'VarDecList':([30,],[34,]),'Type':([0,2,18,19,27,34,],[12,12,21,21,21,21,]),'FuncDec':([0,2,],[13,13,]),'Empty':([18,19,30,34,36,],[22,22,33,40,40,]),'Formals':([18,19,],[23,24,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Program","S'",1,None,None,None),
  ('Program -> DeclList','Program',1,'p_Program','parser.py',23),
  ('DeclList -> DeclList Decl','DeclList',2,'p_DeclList','parser.py',28),
  ('DeclList -> Decl','DeclList',1,'p_DeclList','parser.py',29),
  ('Decl -> VarDec','Decl',1,'p_Decl','parser.py',35),
  ('Decl -> FuncDec','Decl',1,'p_Decl','parser.py',36),
  ('VarDec -> Var SEMI','VarDec',2,'p_VarDec','parser.py',44),
  ('Var -> Type ID','Var',2,'p_Var','parser.py',48),
  ('Type -> INT','Type',1,'p_Type','parser.py',53),
  ('Type -> DOUBLE','Type',1,'p_Type','parser.py',54),
  ('Type -> BOOL','Type',1,'p_Type','parser.py',55),
  ('Type -> STRING','Type',1,'p_Type','parser.py',56),
  ('Type -> ID','Type',1,'p_Type','parser.py',57),
  ('FuncDec -> Type ID LPAREN Formals RPAREN StmtBlock','FuncDec',6,'p_FuncDec','parser.py',65),
  ('FuncDec -> VOID ID LPAREN Formals RPAREN StmtBlock','FuncDec',6,'p_FuncDec','parser.py',66),
  ('Formals -> Formals COMMA Var','Formals',3,'p_Formals','parser.py',72),
  ('Formals -> Var','Formals',1,'p_Formals','parser.py',73),
  ('Formals -> Empty','Formals',1,'p_Formals','parser.py',74),
  ('StmtBlock -> LBRACE VarDecList StmtList RBRACE','StmtBlock',4,'p_StmtBlock','parser.py',79),
  ('VarDecList -> VarDecList VarDec','VarDecList',2,'p_VarDecList','parser.py',84),
  ('VarDecList -> Empty','VarDecList',1,'p_VarDecList','parser.py',85),
  ('StmtList -> Stmt StmtList','StmtList',2,'p_StmtList','parser.py',91),
  ('StmtList -> Empty','StmtList',1,'p_StmtList','parser.py',92),
  ('Stmt -> PrintStmt','Stmt',1,'p_Stmt','parser.py',98),
  ('PrintStmt -> PRINT LPAREN SCONST RPAREN SEMI','PrintStmt',5,'p_PrintStmt','parser.py',104),
  ('Empty -> <empty>','Empty',0,'p_Empty','parser.py',110),
]
